name: Docker-Publish

on:
  workflow_call:
    inputs:
      # The location of the Dockerfile parameter.
      docker_file:
        required: true
        type: string
        description: The location of the Dockerfile.

      # The name of the docker image parameter.
      image_name:
        required: true
        type: string
        description: The name of the docker image.

      # The context path of the project parameter.
      context:
        default: .
        type: string
        description: The context path of the project.
      
      # The docker platforms parameter with default value is "linux/arm64 and linux/amd64"
      platforms:
        default: linux/arm64,linux/amd64
        type: string
        description: The docker platforms parameter with default value is "linux/arm64 and linux/amd64".
    secrets:
      docker_username:
        required: true
        description: The docker repository user name.
      docker_password:
        required: true
        description: The docker repository password or personal access token.

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # Determine version
      - name: Determine version
        id: version
        shell: pwsh
        run: |
          "VERSION_TAG=$(get-date -format yyyyMMddHHmmss)" >> $env:GITHUB_OUTPUT

      - name: Output version
        env:
          VERSION_TAG: ${{ steps.version.outputs.VERSION_TAG }}
        run: echo "$VERSION_TAG"

      # Setup Buildx
      - name: Docker Setup Buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: ${{ inputs.platforms }}

      # Login to docker repository
      - name: Login to Docker repository
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          ecr: auto
          logout: true

      # Pull previous image from docker hub to use it as cache to improve the image build time.
      - name: docker pull cache image
        continue-on-error: true
        run: docker pull ${{ inputs.image_name }}:latest

      # Setup QEMU
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # Build and Publish to Docker
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: ${{ inputs.context }}
          file: ${{ inputs.docker_file }}
          platforms: ${{ inputs.platforms }}
          push: true
          tags: ${{ inputs.image_name }}:latest,${{ inputs.image_name }}:${{ steps.version.outputs.VERSION_TAG }}
          cache-from: ${{ inputs.image_name }}:latest